package com.kaiserandi.eulernet;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5,
 * 8, 13, 21, 34, 55, 89, ... Find the sum of all the even-valued terms in the
 * sequence which do not exceed four million.
 * 
 * @author andi
 */
public class Problem02 {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		long n = 1L;
		long tmp_result = getFibonacci(n);
		long result = 0L;
		while (tmp_result <= 4000000) {
			if (tmp_result % 2 == 0)
				result += tmp_result;
			tmp_result = getFibonacci(n++);
		}
		System.out.println(result);
	}

	private static long getFibonacci(long n) {
		if (n == 2)
			return 2;
		else if (n == 1)
			return 1;
		else
			return getFibonacci(n - 1) + getFibonacci(n - 2);
	}

}
